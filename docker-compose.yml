version: '3.8'

services:
  traefik:
    image: traefik:v3.4
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"
      # Basic auth middleware for dashboard (password hash will be generated by deployment script)
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${ADMIN_EMAIL}:${ADMIN_PASSWORD_HASH}"
      # Traefik dashboard on proxy.bike-map.ch with authentication
      - "traefik.http.routers.traefik.rule=Host(`proxy.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=dashboard-auth"
      # Redirect HTTP to HTTPS for dashboard
      - "traefik.http.routers.traefik-http.rule=Host(`proxy.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.routers.traefik-http.middlewares=redirect-to-https"
    networks:
      - traefik

  backend:
    image: bikemap-backend:latest
    environment:
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - "./pb_data:/pb_data"
    labels:
      - "traefik.enable=true"
      # API routes on main domain
      - "traefik.http.routers.backend-api.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api.entrypoints=websecure"
      - "traefik.http.routers.backend-api.tls.certresolver=myresolver"
      - "traefik.http.services.backend-api.loadbalancer.server.port=8090"
      # Admin UI on admin.bike-map.ch
      - "traefik.http.routers.backend-admin.rule=Host(`admin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.backend-admin.entrypoints=websecure"
      - "traefik.http.routers.backend-admin.tls.certresolver=myresolver"
      - "traefik.http.services.backend-admin.loadbalancer.server.port=8090"
      # Redirect HTTP to HTTPS for API
      - "traefik.http.routers.backend-api-http.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api-http.entrypoints=web"
      - "traefik.http.routers.backend-api-http.middlewares=redirect-to-https"
      # Redirect HTTP to HTTPS for admin
      - "traefik.http.routers.backend-admin-http.rule=Host(`admin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.backend-admin-http.entrypoints=web"
      - "traefik.http.routers.backend-admin-http.middlewares=redirect-to-https"
    networks:
      - traefik
    restart: unless-stopped

  frontend:
    image: bikemap-frontend:latest
    labels:
      - "traefik.enable=true"
      # Frontend on main domain
      - "traefik.http.routers.frontend.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # Redirect HTTP to HTTPS
      - "traefik.http.routers.frontend-http.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.middlewares=redirect-to-https"
    networks:
      - traefik
    restart: unless-stopped

  # Global redirect middleware
  redirect:
    image: traefik:v3.4
    command: ["--providers.docker=true"]
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    networks:
      - traefik

networks:
  traefik:
    external: false

volumes:
  letsencrypt: