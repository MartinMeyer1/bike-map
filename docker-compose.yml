services:
  traefik:
    image: traefik:v3.4
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    labels:
      - "traefik.enable=true"
      # Global middlewares
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
      # CORS middleware - allows all origins
      - "traefik.http.middlewares.cors-all.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors-all.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS,PATCH"
      - "traefik.http.middlewares.cors-all.headers.accesscontrolallowheaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors-all.headers.accesscontrolmaxage=86400"
      - "traefik.http.middlewares.cors-all.headers.addvaryheader=true"
      # ForwardAuth middleware for PocketBase authentication
      - "traefik.http.middlewares.pb-auth.forwardauth.address=http://backend:8090/api/auth/validate"
      - "traefik.http.middlewares.pb-auth.forwardauth.authRequestHeaders=Authorization"
      # Basic auth middleware for dashboard (password hash will be generated by deployment script)
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=${ADMIN_EMAIL}:${ADMIN_PASSWORD_HASH}"
      # Traefik dashboard on proxy.bike-map.ch with authentication
      - "traefik.http.routers.traefik.rule=Host(`proxy.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=dashboard-auth"
      # Redirect HTTP to HTTPS for dashboard
      - "traefik.http.routers.traefik-http.rule=Host(`proxy.${BASE_DOMAIN}`)"
      - "traefik.http.routers.traefik-http.entrypoints=web"
      - "traefik.http.routers.traefik-http.middlewares=redirect-to-https"
    networks:
      - traefik
    restart: unless-stopped  

  postgis:
    image: postgis/postgis:17-3.5-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-gis}
      - POSTGRES_USER=${POSTGRES_USER:-gisuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-gispass}
    volumes:
      - "./mvt-server/initdb:/docker-entrypoint-initdb.d"
      - "postgis_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    networks:
      - traefik
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-gisuser} -d ${POSTGRES_DB:-gis}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: bikemap-backend:latest
    environment:
      # Authentication
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      # Server Configuration
      - BASE_URL=${BASE_URL:-http://localhost:8090}
      # Database Configuration
      - POSTGRES_HOST=postgis
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-gis}
      - POSTGRES_USER=${POSTGRES_USER:-gisuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-gispass}
    volumes:
      - "./pb_data:/pb_data"
    depends_on:
      postgis:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      # API routes on main domain
      - "traefik.http.routers.backend-api.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api.entrypoints=websecure"
      - "traefik.http.routers.backend-api.tls.certresolver=myresolver"
      - "traefik.http.routers.backend-api.middlewares=cors-all"
      - "traefik.http.routers.backend-api.service=backend-api"
      - "traefik.http.services.backend-api.loadbalancer.server.port=8090"
      # Admin UI on admin.bike-map.ch
      - "traefik.http.routers.backend-admin.rule=Host(`admin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.backend-admin.entrypoints=websecure"
      - "traefik.http.routers.backend-admin.tls.certresolver=myresolver"
      - "traefik.http.routers.backend-admin.service=backend-admin"
      - "traefik.http.services.backend-admin.loadbalancer.server.port=8090"
      # Redirect HTTP to HTTPS for API
      - "traefik.http.routers.backend-api-http.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api-http.entrypoints=web"
      - "traefik.http.routers.backend-api-http.service=backend-api"
      - "traefik.http.routers.backend-api-http.middlewares=redirect-to-https,cors-all"
      # Redirect HTTP to HTTPS for admin
      - "traefik.http.routers.backend-admin-http.rule=Host(`admin.${BASE_DOMAIN}`)"
      - "traefik.http.routers.backend-admin-http.entrypoints=web"
      - "traefik.http.routers.backend-admin-http.service=backend-admin"
      - "traefik.http.routers.backend-admin-http.middlewares=redirect-to-https"
    networks:
      - traefik
    restart: unless-stopped

  frontend:
    image: bikemap-frontend:latest
    labels:
      - "traefik.enable=true"
      # Frontend on main domain
      - "traefik.http.routers.frontend.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      # Redirect HTTP to HTTPS
      - "traefik.http.routers.frontend-http.rule=Host(`${BASE_DOMAIN}`)"
      - "traefik.http.routers.frontend-http.entrypoints=web"
      - "traefik.http.routers.frontend-http.middlewares=redirect-to-https"
    networks:
      - traefik
    restart: unless-stopped

  brouter:
    image: ghcr.io/abrensch/brouter:v1.7.8
    volumes:
      - "./routing-server/segments:/segments4"
    labels:
      - "traefik.enable=true"
      # BRouter service on routing.${BASE_DOMAIN} with PocketBase authentication
      - "traefik.http.routers.brouter.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/brouter`)"
      - "traefik.http.routers.brouter.entrypoints=websecure"
      - "traefik.http.routers.brouter.tls.certresolver=myresolver"
      - "traefik.http.routers.brouter.middlewares=pb-auth,cors-all"
      - "traefik.http.services.brouter.loadbalancer.server.port=17777"
      # Redirect HTTP to HTTPS for BRouter
      - "traefik.http.routers.brouter-http.rule=Host(`${BASE_DOMAIN}`) && PathPrefix(`/brouter`)"
      - "traefik.http.routers.brouter-http.entrypoints=web"
      - "traefik.http.routers.brouter-http.middlewares=redirect-to-https,cors-all"
    networks:
      - traefik
    restart: unless-stopped

networks:
  traefik:
    external: false

volumes:
  letsencrypt:
    driver: local
  postgis_data:
    driver: local